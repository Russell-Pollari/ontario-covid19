webpackHotUpdate_N_E("pages/vaccinations",{

/***/ "./src/data/getCasesByVaccineStatus.js":
/*!*********************************************!*\
  !*** ./src/data/getCasesByVaccineStatus.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _jsonpFetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsonpFetch */ \"./src/data/jsonpFetch.js\");\n\nvar dataUrl = 'https://data.ontario.ca/api/3/action/datastore_search?resource_id=eed63cf2-83dd-4598-b337-b288c0a89a16&limit=1000000';\n\nvar ensureNumber = function ensureNumber(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return Number((value || '0').replace(/,/g, ''));\n};\n\nvar getVaccineData = function getVaccineData() {\n  return new Promise(function (resolve) {\n    Object(_jsonpFetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(dataUrl, function (_ref) {\n      var result = _ref.result;\n      var rawRecords = result.records;\n      rawRecords.sort(function (a, b) {\n        return new Date(a.report_date) - new Date(b.report_date);\n      }); // Data comes in with gaps for some dates, so fill in the gaps by replicating the previous date's data\n\n      var records = [];\n\n      for (var currentRecordIndex = 1; currentRecordIndex < rawRecords.length; currentRecordIndex++) {\n        // Backfill up to, but not including, the current record\n        var currentRecord = rawRecords[currentRecordIndex];\n        var curRecordTime = new Date(currentRecord.report_date).getTime(); // Always add the previous record in the original data set\n\n        var prevRecord = rawRecords[currentRecordIndex - 1];\n        records.push(prevRecord); // Continue adding copies of the previous record, until it matches the current record\n\n        var dateToFill = new Date(prevRecord.report_date);\n        dateToFill.setDate(dateToFill.getDate() + 1);\n\n        while (dateToFill.getTime() < curRecordTime) {\n          // Create a new record with a date to fill\n          var backfillRecord = Object.assign({}, prevRecord, {\n            report_date: dateToFill.toISOString().replace(/\\.\\d+Z/, '')\n          });\n          records.push(backfillRecord); // Update the date to fill\n\n          dateToFill.setDate(dateToFill.getDate() + 1);\n        }\n      } // Add the last record, which wasn't added by the above loop\n\n\n      records.push(rawRecords[rawRecords.length - 1]); // Back to your regularly scheduled code\n\n      records.map(function (record) {\n        var report_date = record.Date,\n            covid19_cases_unvac = record.covid19_cases_unvac,\n            covid19_cases_partial_vac = record.covid19_cases_partial_vac,\n            covid19_cases_full_vac = record.covid19_cases_full_vac,\n            covid19_cases_vac_unknown = record.covid19_cases_vac_unknown;\n        record.date_string = new Date(report_date).toLocaleString('en-us', {\n          month: 'short',\n          day: 'numeric'\n        });\n        record.cases_unvac = ensureNumber(covid19_cases_unvac);\n        record.cases_partial_vac = ensureNumber(covid19_cases_partial_vac);\n        record.cases_full_vac = ensureNumber(covid19_cases_full_vac);\n        record.cases_vac_unknown = ensureNumber(covid19_cases_vac_unknown);\n        return record;\n      });\n      resolve(records);\n    });\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (getVaccineData);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2RhdGEvZ2V0Q2FzZXNCeVZhY2NpbmVTdGF0dXMuanM/MTU4MSJdLCJuYW1lcyI6WyJkYXRhVXJsIiwiZW5zdXJlTnVtYmVyIiwidmFsdWUiLCJOdW1iZXIiLCJyZXBsYWNlIiwiZ2V0VmFjY2luZURhdGEiLCJQcm9taXNlIiwicmVzb2x2ZSIsImpzb25wRmV0Y2giLCJyZXN1bHQiLCJyYXdSZWNvcmRzIiwicmVjb3JkcyIsInNvcnQiLCJhIiwiYiIsIkRhdGUiLCJyZXBvcnRfZGF0ZSIsImN1cnJlbnRSZWNvcmRJbmRleCIsImxlbmd0aCIsImN1cnJlbnRSZWNvcmQiLCJjdXJSZWNvcmRUaW1lIiwiZ2V0VGltZSIsInByZXZSZWNvcmQiLCJwdXNoIiwiZGF0ZVRvRmlsbCIsInNldERhdGUiLCJnZXREYXRlIiwiYmFja2ZpbGxSZWNvcmQiLCJPYmplY3QiLCJhc3NpZ24iLCJ0b0lTT1N0cmluZyIsIm1hcCIsInJlY29yZCIsImNvdmlkMTlfY2FzZXNfdW52YWMiLCJjb3ZpZDE5X2Nhc2VzX3BhcnRpYWxfdmFjIiwiY292aWQxOV9jYXNlc19mdWxsX3ZhYyIsImNvdmlkMTlfY2FzZXNfdmFjX3Vua25vd24iLCJkYXRlX3N0cmluZyIsInRvTG9jYWxlU3RyaW5nIiwibW9udGgiLCJkYXkiLCJjYXNlc191bnZhYyIsImNhc2VzX3BhcnRpYWxfdmFjIiwiY2FzZXNfZnVsbF92YWMiLCJjYXNlc192YWNfdW5rbm93biJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBRUEsSUFBTUEsT0FBTyxHQUFHLHNIQUFoQjs7QUFFQSxJQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFDQyxLQUFELEVBQVc7QUFDOUIsTUFBSSxPQUFPQSxLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQzdCLFdBQU9BLEtBQVA7QUFDRDs7QUFDRCxTQUFPQyxNQUFNLENBQUMsQ0FBQ0QsS0FBSyxJQUFJLEdBQVYsRUFBZUUsT0FBZixDQUF1QixJ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QUFZLENBQUNpQyx5QkFBRCxDQUF2QztBQUNBRixjQUFNLENBQUNXLGNBQVAsR0FBd0IxQyxZQUFZLENBQUNrQyxzQkFBRCxDQUFwQztBQUNBSCxjQUFNLENBQUNZLGlCQUFQLEdBQTJCM0MsWUFBWSxDQUFDbUMseUJBQUQsQ0FBdkM7QUFFQSxlQUFPSixNQUFQO0FBQ0EsT0FsQkQ7QUFtQkF6QixhQUFPLENBQUNJLE9BQUQsQ0FBUDtBQUNBLEtBdkRTLENBQVY7QUF3REEsR0F6REQsQ0FEc0I7QUFBQSxDQUF2Qjs7QUE0RGVOLDZFQUFmIiwiZmlsZSI6Ii4vc3JjL2RhdGEvZ2V0Q2FzZXNCeVZhY2NpbmVTdGF0dXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQganNvbnBGZXRjaCBmcm9tICcuL2pzb25wRmV0Y2gnO1xuXG5jb25zdCBkYXRhVXJsID0gJ2h0dHBzOi8vZGF0YS5vbnRhcmlvLmNhL2FwaS8zL2FjdGlvbi9kYXRhc3RvcmVfc2VhcmNoP3Jlc291cmNlX2lkPWVlZDYzY2YyLTgzZGQtNDU5OC1iMzM3LWIyODhjMGE4OWExNiZsaW1pdD0xMDAwMDAwJztcblxuY29uc3QgZW5zdXJlTnVtYmVyID0gKHZhbHVlKSA9PiB7XG5cdFx0aWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH1cblx0XHRyZXR1cm4gTnVtYmVyKCh2YWx1ZSB8fCAnMCcpLnJlcGxhY2UoLywvZywgJycpKTtcbn07XG5cbmNvbnN0IGdldFZhY2NpbmVEYXRhID0gKCkgPT5cblx0bmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcblx0XHRqc29ucEZldGNoKGRhdGFVcmwsICh7IHJlc3VsdCB9KSA9PiB7XG5cdFx0XHRjb25zdCByYXdSZWNvcmRzID0gcmVzdWx0LnJlY29yZHM7XG5cdFx0XHRyYXdSZWNvcmRzLnNvcnQoKGEsIGIpID0+IG5ldyBEYXRlKGEucmVwb3J0X2RhdGUpIC0gbmV3IERhdGUoYi5yZXBvcnRfZGF0ZSkpO1xuXG5cdFx0XHQvLyBEYXRhIGNvbWVzIGluIHdpdGggZ2FwcyBmb3Igc29tZSBkYXRlcywgc28gZmlsbCBpbiB0aGUgZ2FwcyBieSByZXBsaWNhdGluZyB0aGUgcHJldmlvdXMgZGF0ZSdzIGRhdGFcblx0XHRcdGNvbnN0IHJlY29yZHMgPSBbXTtcblx0XHRcdGZvciAobGV0IGN1cnJlbnRSZWNvcmRJbmRleCA9IDE7IGN1cnJlbnRSZWNvcmRJbmRleCA8IHJhd1JlY29yZHMubGVuZ3RoOyBjdXJyZW50UmVjb3JkSW5kZXgrKykge1xuXHRcdFx0XHQvLyBCYWNrZmlsbCB1cCB0bywgYnV0IG5vdCBpbmNsdWRpbmcsIHRoZSBjdXJyZW50IHJlY29yZFxuXHRcdFx0XHRsZXQgY3VycmVudFJlY29yZCA9IHJhd1JlY29yZHNbY3VycmVudFJlY29yZEluZGV4XTtcblx0XHRcdFx0Y29uc3QgY3VyUmVjb3JkVGltZSA9IG5ldyBEYXRlKGN1cnJlbnRSZWNvcmQucmVwb3J0X2RhdGUpLmdldFRpbWUoKTtcblxuXHRcdFx0XHQvLyBBbHdheXMgYWRkIHRoZSBwcmV2aW91cyByZWNvcmQgaW4gdGhlIG9yaWdpbmFsIGRhdGEgc2V0XG5cdFx0XHRcdGxldCBwcmV2UmVjb3JkID0gcmF3UmVjb3Jkc1tjdXJyZW50UmVjb3JkSW5kZXggLSAxXTtcblx0XHRcdFx0cmVjb3Jkcy5wdXNoKHByZXZSZWNvcmQpO1xuXG5cdFx0XHRcdC8vIENvbnRpbnVlIGFkZGluZyBjb3BpZXMgb2YgdGhlIHByZXZpb3VzIHJlY29yZCwgdW50aWwgaXQgbWF0Y2hlcyB0aGUgY3VycmVudCByZWNvcmRcblx0XHRcdFx0bGV0IGRhdGVUb0ZpbGwgPSBuZXcgRGF0ZShwcmV2UmVjb3JkLnJlcG9ydF9kYXRlKTtcblx0XHRcdFx0ZGF0ZVRvRmlsbC5zZXREYXRlKGRhdGVUb0ZpbGwuZ2V0RGF0ZSgpICsgMSk7XG5cblx0XHRcdFx0d2hpbGUgKGRhdGVUb0ZpbGwuZ2V0VGltZSgpIDwgY3VyUmVjb3JkVGltZSkge1xuXHRcdFx0XHRcdC8vIENyZWF0ZSBhIG5ldyByZWNvcmQgd2l0aCBhIGRhdGUgdG8gZmlsbFxuXHRcdFx0XHRcdGNvbnN0IGJhY2tmaWxsUmVjb3JkID0gT2JqZWN0LmFzc2lnbih7fSwgcHJldlJlY29yZCwge1xuXHRcdFx0XHRcdFx0cmVwb3J0X2RhdGU6IGRhdGVUb0ZpbGwudG9JU09TdHJpbmcoKS5yZXBsYWNlKC9cXC5cXGQrWi8sICcnKSxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRyZWNvcmRzLnB1c2goYmFja2ZpbGxSZWNvcmQpO1xuXG5cdFx0XHRcdFx0Ly8gVXBkYXRlIHRoZSBkYXRlIHRvIGZpbGxcblx0XHRcdFx0XHRkYXRlVG9GaWxsLnNldERhdGUoZGF0ZVRvRmlsbC5nZXREYXRlKCkgKyAxKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgdGhlIGxhc3QgcmVjb3JkLCB3aGljaCB3YXNuJ3QgYWRkZWQgYnkgdGhlIGFib3ZlIGxvb3Bcblx0XHRcdHJlY29yZHMucHVzaChyYXdSZWNvcmRzW3Jhd1JlY29yZHMubGVuZ3RoIC0gMV0pO1xuXG5cdFx0XHQvLyBCYWNrIHRvIHlvdXIgcmVndWxhcmx5IHNjaGVkdWxlZCBjb2RlXG5cdFx0XHRyZWNvcmRzLm1hcCgocmVjb3JkKSA9PiB7XG5cdFx0XHRcdGNvbnN0IHtcblx0XHRcdFx0XHREYXRlOiByZXBvcnRfZGF0ZSxcblx0XHRcdFx0XHRjb3ZpZDE5X2Nhc2VzX3VudmFjLFxuXHRcdFx0XHRcdGNvdmlkMTlfY2FzZXNfcGFydGlhbF92YWMsXG5cdFx0XHRcdFx0Y292aWQxOV9jYXNlc19mdWxsX3ZhYyxcblx0XHRcdFx0XHRjb3ZpZDE5X2Nhc2VzX3ZhY191bmtub3duXG5cdFx0XHRcdH0gPSByZWNvcmQ7XG5cdFx0XHRcdHJlY29yZC5kYXRlX3N0cmluZyA9IG5ldyBEYXRlKHJlcG9ydF9kYXRlKS50b0xvY2FsZVN0cmluZygnZW4tdXMnLCB7XG5cdFx0XHRcdFx0bW9udGg6ICdzaG9ydCcsXG5cdFx0XHRcdFx0ZGF5OiAnbnVtZXJpYycsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRyZWNvcmQuY2FzZXNfdW52YWMgPSBlbnN1cmVOdW1iZXIoY292aWQxOV9jYXNlc191bnZhYyk7XG5cdFx0XHRcdHJlY29yZC5jYXNlc19wYXJ0aWFsX3ZhYyA9IGVuc3VyZU51bWJlcihjb3ZpZDE5X2Nhc2VzX3BhcnRpYWxfdmFjKTtcblx0XHRcdFx0cmVjb3JkLmNhc2VzX2Z1bGxfdmFjID0gZW5zdXJlTnVtYmVyKGNvdmlkMTlfY2FzZXNfZnVsbF92YWMpO1xuXHRcdFx0XHRyZWNvcmQuY2FzZXNfdmFjX3Vua25vd24gPSBlbnN1cmVOdW1iZXIoY292aWQxOV9jYXNlc192YWNfdW5rbm93bik7XG5cblx0XHRcdFx0cmV0dXJuIHJlY29yZDtcblx0XHRcdH0pO1xuXHRcdFx0cmVzb2x2ZShyZWNvcmRzKTtcblx0XHR9KTtcblx0fSk7XG5cbmV4cG9ydCBkZWZhdWx0IGdldFZhY2NpbmVEYXRhO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/data/getCasesByVaccineStatus.js\n");

/***/ })

})