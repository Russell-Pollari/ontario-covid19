webpackHotUpdate_N_E("pages/vaccinations",{

/***/ "./src/data/getCasesByVaccineStatus.js":
/*!*********************************************!*\
  !*** ./src/data/getCasesByVaccineStatus.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _jsonpFetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsonpFetch */ \"./src/data/jsonpFetch.js\");\n\nvar dataUrl = 'https://data.ontario.ca/api/3/action/datastore_search?resource_id=eed63cf2-83dd-4598-b337-b288c0a89a16&limit=1000000';\n\nvar ensureNumber = function ensureNumber(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return Number((value || '0').replace(/,/g, ''));\n};\n\nvar getVaccineData = function getVaccineData() {\n  return new Promise(function (resolve) {\n    Object(_jsonpFetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(dataUrl, function (_ref) {\n      var result = _ref.result;\n      var rawRecords = result.records;\n      rawRecords.sort(function (a, b) {\n        return new Date(a.report_date) - new Date(b.report_date);\n      }); // Data comes in with gaps for some dates, so fill in the gaps by replicating the previous date's data\n\n      var records = [];\n\n      for (var currentRecordIndex = 1; currentRecordIndex < rawRecords.length; currentRecordIndex++) {\n        // Backfill up to, but not including, the current record\n        var currentRecord = rawRecords[currentRecordIndex];\n        var curRecordTime = new Date(currentRecord.report_date).getTime(); // Always add the previous record in the original data set\n\n        var prevRecord = rawRecords[currentRecordIndex - 1];\n        records.push(prevRecord); // Continue adding copies of the previous record, until it matches the current record\n\n        var dateToFill = new Date(prevRecord.report_date);\n        dateToFill.setDate(dateToFill.getDate() + 1);\n\n        while (dateToFill.getTime() < curRecordTime) {\n          // Create a new record with a date to fill\n          var backfillRecord = Object.assign({}, prevRecord, {\n            report_date: dateToFill.toISOString().replace(/\\.\\d+Z/, '')\n          });\n          records.push(backfillRecord); // Update the date to fill\n\n          dateToFill.setDate(dateToFill.getDate() + 1);\n        }\n      } // Add the last record, which wasn't added by the above loop\n\n\n      records.push(rawRecords[rawRecords.length - 1]); // Back to your regularly scheduled code\n\n      records.map(function (record) {\n        var report_date = record.Date,\n            covid19_cases_unvac = record.covid19_cases_unvac,\n            covid19_cases_partial_vac = record.covid19_cases_partial_vac,\n            covid19_cases_full_vac = record.covid19_cases_full_vac,\n            covid19_cases_vac_unknown = record.covid19_cases_vac_unknown;\n        record.date_string = new Date(report_date).toLocaleString('en-us', {\n          month: 'short',\n          day: 'numeric'\n        });\n        record.cases_unvac = ensureNumber(covid19_cases_unvac);\n        record.cases_partial_vac = ensureNumber(covid19_cases_partial_vac);\n        record.cases_full_vac = ensureNumber(covid19_cases_full_vac);\n        record.covid19_cases_vac_unknown = ensureNumber(covid19_cases_vac_unknown);\n        return record;\n      });\n      resolve(records);\n    });\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (getVaccineData);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2RhdGEvZ2V0Q2FzZXNCeVZhY2NpbmVTdGF0dXMuanM/MTU4MSJdLCJuYW1lcyI6WyJkYXRhVXJsIiwiZW5zdXJlTnVtYmVyIiwidmFsdWUiLCJOdW1iZXIiLCJyZXBsYWNlIiwiZ2V0VmFjY2luZURhdGEiLCJQcm9taXNlIiwicmVzb2x2ZSIsImpzb25wRmV0Y2giLCJyZXN1bHQiLCJyYXdSZWNvcmRzIiwicmVjb3JkcyIsInNvcnQiLCJhIiwiYiIsIkRhdGUiLCJyZXBvcnRfZGF0ZSIsImN1cnJlbnRSZWNvcmRJbmRleCIsImxlbmd0aCIsImN1cnJlbnRSZWNvcmQiLCJjdXJSZWNvcmRUaW1lIiwiZ2V0VGltZSIsInByZXZSZWNvcmQiLCJwdXNoIiwiZGF0ZVRvRmlsbCIsInNldERhdGUiLCJnZXREYXRlIiwiYmFja2ZpbGxSZWNvcmQiLCJPYmplY3QiLCJhc3NpZ24iLCJ0b0lTT1N0cmluZyIsIm1hcCIsInJlY29yZCIsImNvdmlkMTlfY2FzZXNfdW52YWMiLCJjb3ZpZDE5X2Nhc2VzX3BhcnRpYWxfdmFjIiwiY292aWQxOV9jYXNlc19mdWxsX3ZhYyIsImNvdmlkMTlfY2FzZXNfdmFjX3Vua25vd24iLCJkYXRlX3N0cmluZyIsInRvTG9jYWxlU3RyaW5nIiwibW9udGgiLCJkYXkiLCJjYXNlc191bnZhYyIsImNhc2VzX3BhcnRpYWxfdmFjIiwiY2FzZXNfZnVsbF92YWMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUVBLElBQU1BLE9BQU8sR0FBRyxzSEFBaEI7O0FBRUEsSUFBTUMsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQ0MsS0FBRCxFQUFXO0FBQzlCLE1BQUksT0FBT0EsS0FBUCxLQUFpQixRQUFyQixFQUErQjtBQUM3QixXQUFPQSxLQUFQO0FBQ0Q7O0FBQ0QsU0FBT0MsTUFBTSxDQUFDLENBQUNELEtBQUssSUFBSSxHQUFWLEVBQWVFLE9BQWYsQ0FBdUIsSUFBdkIsRUFBNkIsRUFBN0IsQ0FB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dkM7QUFDQUYsY0FBTSxDQUFDVyxjQUFQLEdBQXdCMUMsWUFBWSxDQUFDa0Msc0JBQUQsQ0FBcEM7QUFDQUgsY0FBTSxDQUFDSSx5QkFBUCxHQUFtQ25DLFlBQVksQ0FBQ21DLHlCQUFELENBQS9DO0FBRUEsZUFBT0osTUFBUDtBQUNBLE9BbEJEO0FBbUJBekIsYUFBTyxDQUFDSSxPQUFELENBQVA7QUFDQSxLQXZEUyxDQUFWO0FBd0RBLEdBekRELENBRHNCO0FBQUEsQ0FBdkI7O0FBNERlTiw2RUFBZiIsImZpbGUiOiIuL3NyYy9kYXRhL2dldENhc2VzQnlWYWNjaW5lU3RhdHVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGpzb25wRmV0Y2ggZnJvbSAnLi9qc29ucEZldGNoJztcblxuY29uc3QgZGF0YVVybCA9ICdodHRwczovL2RhdGEub250YXJpby5jYS9hcGkvMy9hY3Rpb24vZGF0YXN0b3JlX3NlYXJjaD9yZXNvdXJjZV9pZD1lZWQ2M2NmMi04M2RkLTQ1OTgtYjMzNy1iMjg4YzBhODlhMTYmbGltaXQ9MTAwMDAwMCc7XG5cbmNvbnN0IGVuc3VyZU51bWJlciA9ICh2YWx1ZSkgPT4ge1xuXHRcdGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHR9XG5cdFx0cmV0dXJuIE51bWJlcigodmFsdWUgfHwgJzAnKS5yZXBsYWNlKC8sL2csICcnKSk7XG59O1xuXG5jb25zdCBnZXRWYWNjaW5lRGF0YSA9ICgpID0+XG5cdG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG5cdFx0anNvbnBGZXRjaChkYXRhVXJsLCAoeyByZXN1bHQgfSkgPT4ge1xuXHRcdFx0Y29uc3QgcmF3UmVjb3JkcyA9IHJlc3VsdC5yZWNvcmRzO1xuXHRcdFx0cmF3UmVjb3Jkcy5zb3J0KChhLCBiKSA9PiBuZXcgRGF0ZShhLnJlcG9ydF9kYXRlKSAtIG5ldyBEYXRlKGIucmVwb3J0X2RhdGUpKTtcblxuXHRcdFx0Ly8gRGF0YSBjb21lcyBpbiB3aXRoIGdhcHMgZm9yIHNvbWUgZGF0ZXMsIHNvIGZpbGwgaW4gdGhlIGdhcHMgYnkgcmVwbGljYXRpbmcgdGhlIHByZXZpb3VzIGRhdGUncyBkYXRhXG5cdFx0XHRjb25zdCByZWNvcmRzID0gW107XG5cdFx0XHRmb3IgKGxldCBjdXJyZW50UmVjb3JkSW5kZXggPSAxOyBjdXJyZW50UmVjb3JkSW5kZXggPCByYXdSZWNvcmRzLmxlbmd0aDsgY3VycmVudFJlY29yZEluZGV4KyspIHtcblx0XHRcdFx0Ly8gQmFja2ZpbGwgdXAgdG8sIGJ1dCBub3QgaW5jbHVkaW5nLCB0aGUgY3VycmVudCByZWNvcmRcblx0XHRcdFx0bGV0IGN1cnJlbnRSZWNvcmQgPSByYXdSZWNvcmRzW2N1cnJlbnRSZWNvcmRJbmRleF07XG5cdFx0XHRcdGNvbnN0IGN1clJlY29yZFRpbWUgPSBuZXcgRGF0ZShjdXJyZW50UmVjb3JkLnJlcG9ydF9kYXRlKS5nZXRUaW1lKCk7XG5cblx0XHRcdFx0Ly8gQWx3YXlzIGFkZCB0aGUgcHJldmlvdXMgcmVjb3JkIGluIHRoZSBvcmlnaW5hbCBkYXRhIHNldFxuXHRcdFx0XHRsZXQgcHJldlJlY29yZCA9IHJhd1JlY29yZHNbY3VycmVudFJlY29yZEluZGV4IC0gMV07XG5cdFx0XHRcdHJlY29yZHMucHVzaChwcmV2UmVjb3JkKTtcblxuXHRcdFx0XHQvLyBDb250aW51ZSBhZGRpbmcgY29waWVzIG9mIHRoZSBwcmV2aW91cyByZWNvcmQsIHVudGlsIGl0IG1hdGNoZXMgdGhlIGN1cnJlbnQgcmVjb3JkXG5cdFx0XHRcdGxldCBkYXRlVG9GaWxsID0gbmV3IERhdGUocHJldlJlY29yZC5yZXBvcnRfZGF0ZSk7XG5cdFx0XHRcdGRhdGVUb0ZpbGwuc2V0RGF0ZShkYXRlVG9GaWxsLmdldERhdGUoKSArIDEpO1xuXG5cdFx0XHRcdHdoaWxlIChkYXRlVG9GaWxsLmdldFRpbWUoKSA8IGN1clJlY29yZFRpbWUpIHtcblx0XHRcdFx0XHQvLyBDcmVhdGUgYSBuZXcgcmVjb3JkIHdpdGggYSBkYXRlIHRvIGZpbGxcblx0XHRcdFx0XHRjb25zdCBiYWNrZmlsbFJlY29yZCA9IE9iamVjdC5hc3NpZ24oe30sIHByZXZSZWNvcmQsIHtcblx0XHRcdFx0XHRcdHJlcG9ydF9kYXRlOiBkYXRlVG9GaWxsLnRvSVNPU3RyaW5nKCkucmVwbGFjZSgvXFwuXFxkK1ovLCAnJyksXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0cmVjb3Jkcy5wdXNoKGJhY2tmaWxsUmVjb3JkKTtcblxuXHRcdFx0XHRcdC8vIFVwZGF0ZSB0aGUgZGF0ZSB0byBmaWxsXG5cdFx0XHRcdFx0ZGF0ZVRvRmlsbC5zZXREYXRlKGRhdGVUb0ZpbGwuZ2V0RGF0ZSgpICsgMSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIHRoZSBsYXN0IHJlY29yZCwgd2hpY2ggd2Fzbid0IGFkZGVkIGJ5IHRoZSBhYm92ZSBsb29wXG5cdFx0XHRyZWNvcmRzLnB1c2gocmF3UmVjb3Jkc1tyYXdSZWNvcmRzLmxlbmd0aCAtIDFdKTtcblxuXHRcdFx0Ly8gQmFjayB0byB5b3VyIHJlZ3VsYXJseSBzY2hlZHVsZWQgY29kZVxuXHRcdFx0cmVjb3Jkcy5tYXAoKHJlY29yZCkgPT4ge1xuXHRcdFx0XHRjb25zdCB7XG5cdFx0XHRcdFx0RGF0ZTogcmVwb3J0X2RhdGUsXG5cdFx0XHRcdFx0Y292aWQxOV9jYXNlc191bnZhYyxcblx0XHRcdFx0XHRjb3ZpZDE5X2Nhc2VzX3BhcnRpYWxfdmFjLFxuXHRcdFx0XHRcdGNvdmlkMTlfY2FzZXNfZnVsbF92YWMsXG5cdFx0XHRcdFx0Y292aWQxOV9jYXNlc192YWNfdW5rbm93blxuXHRcdFx0XHR9ID0gcmVjb3JkO1xuXHRcdFx0XHRyZWNvcmQuZGF0ZV9zdHJpbmcgPSBuZXcgRGF0ZShyZXBvcnRfZGF0ZSkudG9Mb2NhbGVTdHJpbmcoJ2VuLXVzJywge1xuXHRcdFx0XHRcdG1vbnRoOiAnc2hvcnQnLFxuXHRcdFx0XHRcdGRheTogJ251bWVyaWMnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmVjb3JkLmNhc2VzX3VudmFjID0gZW5zdXJlTnVtYmVyKGNvdmlkMTlfY2FzZXNfdW52YWMpO1xuXHRcdFx0XHRyZWNvcmQuY2FzZXNfcGFydGlhbF92YWMgPSBlbnN1cmVOdW1iZXIoY292aWQxOV9jYXNlc19wYXJ0aWFsX3ZhYyk7XG5cdFx0XHRcdHJlY29yZC5jYXNlc19mdWxsX3ZhYyA9IGVuc3VyZU51bWJlcihjb3ZpZDE5X2Nhc2VzX2Z1bGxfdmFjKTtcblx0XHRcdFx0cmVjb3JkLmNvdmlkMTlfY2FzZXNfdmFjX3Vua25vd24gPSBlbnN1cmVOdW1iZXIoY292aWQxOV9jYXNlc192YWNfdW5rbm93bik7XG5cblx0XHRcdFx0cmV0dXJuIHJlY29yZDtcblx0XHRcdH0pO1xuXHRcdFx0cmVzb2x2ZShyZWNvcmRzKTtcblx0XHR9KTtcblx0fSk7XG5cbmV4cG9ydCBkZWZhdWx0IGdldFZhY2NpbmVEYXRhO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/data/getCasesByVaccineStatus.js\n");

/***/ })

})