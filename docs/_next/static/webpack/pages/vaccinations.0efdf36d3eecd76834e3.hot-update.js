webpackHotUpdate_N_E("pages/vaccinations",{

/***/ "./src/data/getHospitalizationsByVaccineStatus.js":
/*!********************************************************!*\
  !*** ./src/data/getHospitalizationsByVaccineStatus.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _jsonpFetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsonpFetch */ \"./src/data/jsonpFetch.js\");\n\nvar dataUrl = 'https://data.ontario.ca/api/3/action/datastore_search?resource_id=274b819c-5d69-4539-a4db-f2950794138c&limit=1000000';\n\nvar getHospitalizationsByVaccineStatus = function getHospitalizationsByVaccineStatus() {\n  return new Promise(function (resolve) {\n    Object(_jsonpFetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(dataUrl, function (_ref) {\n      var result = _ref.result;\n      var rawRecords = result.records;\n      rawRecords.sort(function (a, b) {\n        return new Date(a.report_date) - new Date(b.report_date);\n      }); // Data comes in with gaps for some dates, so fill in the gaps by replicating the previous date's data\n\n      var records = [];\n\n      for (var currentRecordIndex = 1; currentRecordIndex < rawRecords.length; currentRecordIndex++) {\n        // Backfill up to, but not including, the current record\n        var currentRecord = rawRecords[currentRecordIndex];\n        var curRecordTime = new Date(currentRecord.report_date).getTime(); // Always add the previous record in the original data set\n\n        var prevRecord = rawRecords[currentRecordIndex - 1];\n        records.push(prevRecord); // Continue adding copies of the previous record, until it matches the current record\n\n        var dateToFill = new Date(prevRecord.report_date);\n        dateToFill.setDate(dateToFill.getDate() + 1);\n\n        while (dateToFill.getTime() < curRecordTime) {\n          // Create a new record with a date to fill\n          var backfillRecord = Object.assign({}, prevRecord, {\n            report_date: dateToFill.toISOString().replace(/\\.\\d+Z/, '')\n          });\n          records.push(backfillRecord); // Update the date to fill\n\n          dateToFill.setDate(dateToFill.getDate() + 1);\n        }\n      } // Add the last record, which wasn't added by the above loop\n\n\n      records.push(rawRecords[rawRecords.length - 1]); // Back to your regularly scheduled code\n\n      records.map(function (record) {\n        var report_date = record.date,\n            icu_unvac = record.icu_unvac,\n            icu_partial_vac = record.icu_partial_vac,\n            icu_full_vac = record.icu_full_vac,\n            hospitalnonicu_partial_vac = record.hospitalnonicu_partial_vac,\n            hospitalnonicu_full_vac = record.hospitalnonicu_full_vac,\n            hospitalnonicu_unvac = record.hospitalnonicu_unvac;\n        record.date_string = new Date(report_date).toLocaleString('en-us', {\n          month: 'short',\n          day: 'numeric'\n        });\n        record.hospital_partial_vac = ensureNumber(icu_partial_vac) + ensureNumber(hospitalnonicu_partial_vac); // record.cases_unvac = ensureNumber(covid19_cases_unvac);\n        // record.cases_partial_vac = ensureNumber(covid19_cases_partial_vac);\n        // record.cases_full_vac = ensureNumber(covid19_cases_full_vac);\n        // record.cases_vac_unknown = ensureNumber(covid19_cases_vac_unknown);\n\n        return record;\n      });\n      resolve(records);\n    });\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (getHospitalizationsByVaccineStatus);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2RhdGEvZ2V0SG9zcGl0YWxpemF0aW9uc0J5VmFjY2luZVN0YXR1cy5qcz83OTQzIl0sIm5hbWVzIjpbImRhdGFVcmwiLCJnZXRIb3NwaXRhbGl6YXRpb25zQnlWYWNjaW5lU3RhdHVzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJqc29ucEZldGNoIiwicmVzdWx0IiwicmF3UmVjb3JkcyIsInJlY29yZHMiLCJzb3J0IiwiYSIsImIiLCJEYXRlIiwicmVwb3J0X2RhdGUiLCJjdXJyZW50UmVjb3JkSW5kZXgiLCJsZW5ndGgiLCJjdXJyZW50UmVjb3JkIiwiY3VyUmVjb3JkVGltZSIsImdldFRpbWUiLCJwcmV2UmVjb3JkIiwicHVzaCIsImRhdGVUb0ZpbGwiLCJzZXREYXRlIiwiZ2V0RGF0ZSIsImJhY2tmaWxsUmVjb3JkIiwiT2JqZWN0IiwiYXNzaWduIiwidG9JU09TdHJpbmciLCJyZXBsYWNlIiwibWFwIiwicmVjb3JkIiwiZGF0ZSIsImljdV91bnZhYyIsImljdV9wYXJ0aWFsX3ZhYyIsImljdV9mdWxsX3ZhYyIsImhvc3BpdGFsbm9uaWN1X3BhcnRpYWxfdmFjIiwiaG9zcGl0YWxub25pY3VfZnVsbF92YWMiLCJob3NwaXRhbG5vbmljdV91bnZhYyIsImRhdGVfc3RyaW5nIiwidG9Mb2NhbGVTdHJpbmciLCJtb250aCIsImRheSIsImhvc3BpdGFsX3BhcnRpYWxfdmFjIiwiZW5zdXJlTnVtYmVyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFFQSxJQUFNQSxPQUFPLEdBQUcsc0hBQWhCOztBQUVBLElBQU1DLGtDQUFrQyxHQUFHLFNBQXJDQSxrQ0FBcUM7QUFBQSxTQUMxQyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFhO0FBQ3hCQywrREFBVSxDQUFDSixPQUFELEVBQVUsZ0JBQWdCO0FBQUEsVUFBYkssTUFBYSxRQUFiQSxNQUFhO0FBQ25DLFVBQU1DLFVBQVUsR0FBR0QsTUFBTSxDQUFDRSxP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ZU4saUdBQWYiLCJmaWxlIjoiLi9zcmMvZGF0YS9nZXRIb3NwaXRhbGl6YXRpb25zQnlWYWNjaW5lU3RhdHVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGpzb25wRmV0Y2ggZnJvbSAnLi9qc29ucEZldGNoJztcblxuY29uc3QgZGF0YVVybCA9ICdodHRwczovL2RhdGEub250YXJpby5jYS9hcGkvMy9hY3Rpb24vZGF0YXN0b3JlX3NlYXJjaD9yZXNvdXJjZV9pZD0yNzRiODE5Yy01ZDY5LTQ1MzktYTRkYi1mMjk1MDc5NDEzOGMmbGltaXQ9MTAwMDAwMCc7XG5cbmNvbnN0IGdldEhvc3BpdGFsaXphdGlvbnNCeVZhY2NpbmVTdGF0dXMgPSAoKSA9PlxuXHRuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuXHRcdGpzb25wRmV0Y2goZGF0YVVybCwgKHsgcmVzdWx0IH0pID0+IHtcblx0XHRcdGNvbnN0IHJhd1JlY29yZHMgPSByZXN1bHQucmVjb3Jkcztcblx0XHRcdHJhd1JlY29yZHMuc29ydCgoYSwgYikgPT4gbmV3IERhdGUoYS5yZXBvcnRfZGF0ZSkgLSBuZXcgRGF0ZShiLnJlcG9ydF9kYXRlKSk7XG5cblx0XHRcdC8vIERhdGEgY29tZXMgaW4gd2l0aCBnYXBzIGZvciBzb21lIGRhdGVzLCBzbyBmaWxsIGluIHRoZSBnYXBzIGJ5IHJlcGxpY2F0aW5nIHRoZSBwcmV2aW91cyBkYXRlJ3MgZGF0YVxuXHRcdFx0Y29uc3QgcmVjb3JkcyA9IFtdO1xuXHRcdFx0Zm9yIChsZXQgY3VycmVudFJlY29yZEluZGV4ID0gMTsgY3VycmVudFJlY29yZEluZGV4IDwgcmF3UmVjb3Jkcy5sZW5ndGg7IGN1cnJlbnRSZWNvcmRJbmRleCsrKSB7XG5cdFx0XHRcdC8vIEJhY2tmaWxsIHVwIHRvLCBidXQgbm90IGluY2x1ZGluZywgdGhlIGN1cnJlbnQgcmVjb3JkXG5cdFx0XHRcdGxldCBjdXJyZW50UmVjb3JkID0gcmF3UmVjb3Jkc1tjdXJyZW50UmVjb3JkSW5kZXhdO1xuXHRcdFx0XHRjb25zdCBjdXJSZWNvcmRUaW1lID0gbmV3IERhdGUoY3VycmVudFJlY29yZC5yZXBvcnRfZGF0ZSkuZ2V0VGltZSgpO1xuXG5cdFx0XHRcdC8vIEFsd2F5cyBhZGQgdGhlIHByZXZpb3VzIHJlY29yZCBpbiB0aGUgb3JpZ2luYWwgZGF0YSBzZXRcblx0XHRcdFx0bGV0IHByZXZSZWNvcmQgPSByYXdSZWNvcmRzW2N1cnJlbnRSZWNvcmRJbmRleCAtIDFdO1xuXHRcdFx0XHRyZWNvcmRzLnB1c2gocHJldlJlY29yZCk7XG5cblx0XHRcdFx0Ly8gQ29udGludWUgYWRkaW5nIGNvcGllcyBvZiB0aGUgcHJldmlvdXMgcmVjb3JkLCB1bnRpbCBpdCBtYXRjaGVzIHRoZSBjdXJyZW50IHJlY29yZFxuXHRcdFx0XHRsZXQgZGF0ZVRvRmlsbCA9IG5ldyBEYXRlKHByZXZSZWNvcmQucmVwb3J0X2RhdGUpO1xuXHRcdFx0XHRkYXRlVG9GaWxsLnNldERhdGUoZGF0ZVRvRmlsbC5nZXREYXRlKCkgKyAxKTtcblxuXHRcdFx0XHR3aGlsZSAoZGF0ZVRvRmlsbC5nZXRUaW1lKCkgPCBjdXJSZWNvcmRUaW1lKSB7XG5cdFx0XHRcdFx0Ly8gQ3JlYXRlIGEgbmV3IHJlY29yZCB3aXRoIGEgZGF0ZSB0byBmaWxsXG5cdFx0XHRcdFx0Y29uc3QgYmFja2ZpbGxSZWNvcmQgPSBPYmplY3QuYXNzaWduKHt9LCBwcmV2UmVjb3JkLCB7XG5cdFx0XHRcdFx0XHRyZXBvcnRfZGF0ZTogZGF0ZVRvRmlsbC50b0lTT1N0cmluZygpLnJlcGxhY2UoL1xcLlxcZCtaLywgJycpLFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdHJlY29yZHMucHVzaChiYWNrZmlsbFJlY29yZCk7XG5cblx0XHRcdFx0XHQvLyBVcGRhdGUgdGhlIGRhdGUgdG8gZmlsbFxuXHRcdFx0XHRcdGRhdGVUb0ZpbGwuc2V0RGF0ZShkYXRlVG9GaWxsLmdldERhdGUoKSArIDEpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCB0aGUgbGFzdCByZWNvcmQsIHdoaWNoIHdhc24ndCBhZGRlZCBieSB0aGUgYWJvdmUgbG9vcFxuXHRcdFx0cmVjb3Jkcy5wdXNoKHJhd1JlY29yZHNbcmF3UmVjb3Jkcy5sZW5ndGggLSAxXSk7XG5cblx0XHRcdC8vIEJhY2sgdG8geW91ciByZWd1bGFybHkgc2NoZWR1bGVkIGNvZGVcblx0XHRcdHJlY29yZHMubWFwKChyZWNvcmQpID0+IHtcblx0XHRcdFx0Y29uc3Qge1xuXHRcdFx0XHRcdGRhdGU6IHJlcG9ydF9kYXRlLFxuXHRcdFx0XHRcdGljdV91bnZhYyxcblx0XHRcdFx0XHRpY3VfcGFydGlhbF92YWMsXG5cdFx0XHRcdFx0aWN1X2Z1bGxfdmFjLFxuXHRcdFx0XHRcdGhvc3BpdGFsbm9uaWN1X3BhcnRpYWxfdmFjLFxuXHRcdFx0XHRcdGhvc3BpdGFsbm9uaWN1X2Z1bGxfdmFjLFxuXHRcdFx0XHRcdGhvc3BpdGFsbm9uaWN1X3VudmFjLFxuXHRcdFx0XHR9ID0gcmVjb3JkO1xuXHRcdFx0XHRyZWNvcmQuZGF0ZV9zdHJpbmcgPSBuZXcgRGF0ZShyZXBvcnRfZGF0ZSkudG9Mb2NhbGVTdHJpbmcoJ2VuLXVzJywge1xuXHRcdFx0XHRcdG1vbnRoOiAnc2hvcnQnLFxuXHRcdFx0XHRcdGRheTogJ251bWVyaWMnLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmVjb3JkLmhvc3BpdGFsX3BhcnRpYWxfdmFjID0gZW5zdXJlTnVtYmVyKGljdV9wYXJ0aWFsX3ZhYykgKyBlbnN1cmVOdW1iZXIoaG9zcGl0YWxub25pY3VfcGFydGlhbF92YWMpO1xuXHRcdFx0XHQvLyByZWNvcmQuY2FzZXNfdW52YWMgPSBlbnN1cmVOdW1iZXIoY292aWQxOV9jYXNlc191bnZhYyk7XG5cdFx0XHRcdC8vIHJlY29yZC5jYXNlc19wYXJ0aWFsX3ZhYyA9IGVuc3VyZU51bWJlcihjb3ZpZDE5X2Nhc2VzX3BhcnRpYWxfdmFjKTtcblx0XHRcdFx0Ly8gcmVjb3JkLmNhc2VzX2Z1bGxfdmFjID0gZW5zdXJlTnVtYmVyKGNvdmlkMTlfY2FzZXNfZnVsbF92YWMpO1xuXHRcdFx0XHQvLyByZWNvcmQuY2FzZXNfdmFjX3Vua25vd24gPSBlbnN1cmVOdW1iZXIoY292aWQxOV9jYXNlc192YWNfdW5rbm93bik7XG5cblx0XHRcdFx0cmV0dXJuIHJlY29yZDtcblx0XHRcdH0pO1xuXHRcdFx0cmVzb2x2ZShyZWNvcmRzKTtcblx0XHR9KTtcblx0fSk7XG5cbmV4cG9ydCBkZWZhdWx0IGdldEhvc3BpdGFsaXphdGlvbnNCeVZhY2NpbmVTdGF0dXM7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/data/getHospitalizationsByVaccineStatus.js\n");

/***/ })

})